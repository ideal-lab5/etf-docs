"use strict";(self.webpackChunketf_docs=self.webpackChunketf_docs||[]).push([[4332],{5140:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>o,default:()=>u,frontMatter:()=>c,metadata:()=>a,toc:()=>l});var s=t(5893),r=t(1151);const c={},o="Smart Contracts",a={id:"ETF basics/contracts",title:"Smart Contracts",description:"The ETF network supports ink! smart contracts via Substrate's pallet-contracts.",source:"@site/docs/ETF basics/contracts.md",sourceDirName:"ETF basics",slug:"/ETF basics/contracts",permalink:"/etf-docs/docs/ETF basics/contracts",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ETF basics/contracts.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Getting Started",permalink:"/etf-docs/docs/ETF basics/getting_started"},next:{title:"ETF.js",permalink:"/etf-docs/docs/ETF basics/etf_js"}},i={},l=[{value:"Chain Extension and ETF Environment",id:"chain-extension-and-etf-environment",level:2},{value:"ETF Environment setup",id:"etf-environment-setup",level:4}];function d(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"smart-contracts",children:"Smart Contracts"}),"\n",(0,s.jsx)(n.p,{children:"The ETF network supports ink! smart contracts via Substrate's pallet-contracts."}),"\n",(0,s.jsx)(n.h2,{id:"chain-extension-and-etf-environment",children:"Chain Extension and ETF Environment"}),"\n",(0,s.jsxs)(n.p,{children:["The ETF Network uses a custom chain extension to allow smart contracts to check if a slot is in the future or in the past. The chain extension allows you to check if a block has been authored in a given slot, which is very useful in cases where it is important to know if data ",(0,s.jsx)(n.em,{children:"can"})," be decrypted. The custom environment can be configured in ink! smart contracts to call the chain extension exposed by the ETF network runtime."]}),"\n",(0,s.jsx)(n.h4,{id:"etf-environment-setup",children:"ETF Environment setup"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Add the dependency to your contract"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",children:'etf-chain-extension = { version = "0.1.0, default-features = false, features = ["ink-as-dependency"] }\n'})}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsx)(n.li,{children:"Configure the environment in your contract"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-rust",children:"use etf_chain_extension::ext::EtfEnvironment;\n#[ink::contract(env = EtfEnvironment)]\nmod your_smart_contract {\n    use crate::EtfEnvironment;\n    ...\n}\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"3",children:["\n",(0,s.jsx)(n.li,{children:"Query the runtime to check if a block has been authored in the slot."}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-rust",children:"self.env()\n    .extension()\n    .check_slot(deadline)\n"})})]})}function u(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>a,a:()=>o});var s=t(7294);const r={},c=s.createContext(r);function o(e){const n=s.useContext(c);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(c.Provider,{value:n},e.children)}}}]);