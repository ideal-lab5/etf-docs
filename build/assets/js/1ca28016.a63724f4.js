"use strict";(self.webpackChunkidn_docs=self.webpackChunkidn_docs||[]).push([[517],{2882:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>d});var s=t(5893),o=t(1151);const a={sidebar_position:2},i="Smart Contracts",r={id:"build/contracts",title:"Smart Contracts",description:"Learn about using the Ideal Network to get on-chain randomness within ink! smart cotnracts.",source:"@site/docs/build/contracts.md",sourceDirName:"build",slug:"/build/contracts",permalink:"/docs/build/contracts",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/build/contracts.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Getting Started",permalink:"/docs/build/getting_started"},next:{title:"ETF.JS SDK",permalink:"/docs/build/etf_js"}},c={},d=[{value:"Usage",id:"usage",level:2},{value:"Onchain Randomness",id:"onchain-randomness",level:3},{value:"Chain Extension and ETF Environment",id:"chain-extension-and-etf-environment",level:2}];function l(n){const e={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.a)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h1,{id:"smart-contracts",children:"Smart Contracts"}),"\n",(0,s.jsx)(e.p,{children:"Learn about using the Ideal Network to get on-chain randomness within ink! smart cotnracts."}),"\n",(0,s.jsxs)(e.p,{children:["Check out the contracts repo ",(0,s.jsx)(e.a,{href:"https://github.com/ideal-lab5/contracts",children:"here"}),"."]}),"\n",(0,s.jsx)(e.p,{children:"Contracts on the Ideal Network can use both:"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"onchain randomness"}),"\n",(0,s.jsx)(e.li,{children:"delayed transactions for simultaneous protocol completion"}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(e.h3,{id:"onchain-randomness",children:"Onchain Randomness"}),"\n",(0,s.jsx)(e.p,{children:"The chain extension allows contracts to fetch onchain randomness by reading slot secrets from the chain."}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-rust",children:"self.env()\n    .extension()\n    .secret()\n"})}),"\n",(0,s.jsx)(e.h2,{id:"chain-extension-and-etf-environment",children:"Chain Extension and ETF Environment"}),"\n",(0,s.jsxs)(e.p,{children:["The Ideal Network uses a custom chain extension to allow smart contracts to check if a slot is in the future or in the past. The chain extension allows you to check if a block has been authored in a given slot, which is very useful in cases where it is important to know if data ",(0,s.jsx)(e.em,{children:"can"})," be decrypted. The custom environment can be configured in ink! smart contracts to call the chain extension exposed by the Ideal Network runtime."]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"ETF Environment setup"})}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsx)(e.li,{children:"Add the dependency to your contract"}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-toml",children:'[dependencies]\netf-contract-utils = { git = "https://github.com/ideal-lab5/contracts", default-features = false, features = ["ink-as-dependency"] }\n\n[features]\nstd = [\n    "etf-contract-utils/std",\n]\n'})})]})}function h(n={}){const{wrapper:e}={...(0,o.a)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(l,{...n})}):l(n)}},1151:(n,e,t)=>{t.d(e,{Z:()=>r,a:()=>i});var s=t(7294);const o={},a=s.createContext(o);function i(n){const e=s.useContext(a);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:i(n.components),s.createElement(a.Provider,{value:e},n.children)}}}]);