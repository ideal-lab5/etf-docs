"use strict";(self.webpackChunkidn_docs=self.webpackChunkidn_docs||[]).push([[337],{1663:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var s=a(5893),n=a(1151);const o={sidebar_position:3},r="Contract Examples",i={id:"examples/contract_examples",title:"Contract Examples",description:"This is a collection of examples of smart contracts built on the Ideal Network. You can check them all out on github here.",source:"@site/docs/examples/contract_examples.md",sourceDirName:"examples",slug:"/examples/contract_examples",permalink:"/docs/examples/contract_examples",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/examples/contract_examples.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Timelock Auction",permalink:"/docs/examples/timelock_auction"}},c={},l=[];function d(e){const t={a:"a",code:"code",h1:"h1",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,n.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"contract-examples",children:"Contract Examples"}),"\n",(0,s.jsxs)(t.p,{children:["This is a collection of examples of smart contracts built on the Ideal Network. You can check them all out on github ",(0,s.jsx)(t.a,{href:"https://github.com/ideal-lab5/contracts/tree/main/examples",children:"here"}),"."]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"https://github.com/ideal-lab5/contracts/tree/main/examples/bit-roulette",children:"BitRoulette"}),"\nBit roulette is a basic example that demonstrates:","\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsx)(t.li,{children:"usage of onchain randomness"}),"\n",(0,s.jsx)(t.li,{children:"using delayed transactions to orchestrate simultaneous actions by all participants (i.e. they all have to use the same randomness)"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"https://github.com/ideal-lab5/contracts/tree/main/examples/world-registry",children:"onchain randomness for randomly seeded world generation"}),"\nThis is a basic of example to demonstrate how the onchain randomness can be used. Here, we let users provide an input seed which is xor'd with the latest block randomness to generate a new random seed. This seed is stored as the identity of a ",(0,s.jsx)(t.code,{children:"world"}),", which can be used, for example, as input to a procedural generation algorithm, such as Perlin noise, to generate a game world from the owned, veriable, random seed."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"https://github.com/ideal-lab5/block-battalion/tree/main/contracts",children:"Block Battalion"}),"\nBlock battalion is a simple game built around bit roulette as a core game mechanic. It demonstrates how to construct a ",(0,s.jsx)(t.strong,{children:"decentralized game event clock"})," to orchestrate player actions. In bit roulette, all players attempt to harvest resources by guessing the parity of the same slot secret (via delayed transactions)."]}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,n.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},1151:(e,t,a)=>{a.d(t,{Z:()=>i,a:()=>r});var s=a(7294);const n={},o=s.createContext(n);function r(e){const t=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);